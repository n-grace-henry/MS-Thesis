GLU <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/all_GLU_formatted.csv")
GLU <- as.matrix(GLU[,-1])
# Load environmental data
PDO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/PDO_tidy.csv")
ENSO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/ENSO_tidy.csv")
NPGO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/NPGO_tidy.csv")
View(ENSO)
# Load packages
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# Load data
data <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/Environmental/ENSO.csv")
View(data)
# Convert to long format
data_long <- data %>%
pivot_longer(cols = -1, names_to = "Month", values_to = "MEI")
# Grab years 1964-2023
data_long <- data_long[data_long$Year >= "1960" & data_long$Year <= "2023",]
# Convert month to date
data_long <- data_long %>%
mutate(month_number = match(Month, month.abb))
View(data_long)
# One value per year
data_long <- data_long %>%
group_by(Year) %>%
summarise(MEI = mean(MEI))
# Plot
plot(x = data_long$Year,
y = data_long$MEI,
type ="l")
# Save as csv
write.csv(data_long, file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/ENSO_tidy.csv")
# Load PHE data
PHE <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/all_PHE_formatted.csv")
PHE <- as.matrix(PHE[,-1])
# Load GLU data
GLU <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/all_GLU_formatted.csv")
GLU <- as.matrix(GLU[,-1])
View(PHE)
# Load environmental data
PDO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/PDO_tidy.csv")
ENSO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/ENSO_tidy.csv")
View(ENSO)
# Load packages
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# Load data
data <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/Environmental/ENSO.csv")
# Convert to long format
data_long <- data %>%
pivot_longer(cols = -1, names_to = "Month", values_to = "MEI")
# Grab years 1964-2023
data_long <- data_long[data_long$Year >= "1965" & data_long$Year <= "2022",]
# Convert month to date
data_long <- data_long %>%
mutate(month_number = match(Month, month.abb))
# One value per year
data_long <- data_long %>%
group_by(Year) %>%
summarise(MEI = mean(MEI))
# Plot
plot(x = data_long$Year,
y = data_long$MEI,
type ="l")
# Save as csv
write.csv(data_long, file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/ENSO_tidy.csv")
# Load PHE data
PHE <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/all_PHE_formatted.csv")
PHE <- as.matrix(PHE[,-1])
# Load GLU data
GLU <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/all_GLU_formatted.csv")
GLU <- as.matrix(GLU[,-1])
# Load environmental data
PDO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/PDO_tidy.csv")
ENSO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/ENSO_tidy.csv")
NPGO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/NPGO_tidy.csv")
View(NPGO)
# Load Packages
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# Load Data
data <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/data.csv")
# Load Data
NPGO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/NPGO.csv")
# NPGO average per year
NPGO_annual <- NPGO %>%
group_by(Year) %>%
summarise(avg = mean(NPGO))
View(NPGO_annual)
str(NPGO_annual)
# Take only years of interest
NPGO_annual <- NPGO_annual[NPGO_annual$Year >= 1965 & NPGO_annual$Year <= 2022,]
View(NPGO_annual)
# Plot
plot(NPGO_annual, type = "l")
# Write new csv
write.csv(NPGO_annual, file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/NPGO_tidy.csv")
# Load PHE data
PHE <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/all_PHE_formatted.csv")
PHE <- as.matrix(PHE[,-1])
# Load GLU data
GLU <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/all_GLU_formatted.csv")
GLU <- as.matrix(GLU[,-1])
# Load environmental data
PDO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/PDO_tidy.csv")
ENSO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/ENSO_tidy.csv")
NPGO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/NPGO_tidy.csv")
View(PDO)
View(NPGO)
View(ENSO)
# Put all envi data into one df
test <- cbind(PDO, ENSO, NPGO)
View(test)
test <- test[,c(2,3,6,9)]
View(test)
colnames(test) <- c("Year", "PDO", "ENSO", "NPGO")
# Load packages
library(tidyverse)
library(MARSS)
library(ggplot2)
# Load PHE data
PHE <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/all_PHE_formatted.csv")
PHE <- as.matrix(PHE[,-1])
# Load GLU data
GLU <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/all_GLU_formatted.csv")
GLU <- as.matrix(GLU[,-1])
# Load environmental data
PDO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/PDO_tidy.csv")
ENSO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/ENSO_tidy.csv")
NPGO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/NPGO_tidy.csv")
ret <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/BB_returns.csv")
ice <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/sea_ice.csv")
# Put all envi data into one df
climate <- cbind(PDO, ENSO, NPGO)
climate <- test[,c(2,3,6,9)]
climate <- climate[,c(2,3,6,9)]
colnames(climate) <- c("Year", "PDO", "ENSO", "NPGO")
View(climate)
# Transpose climate
climate <- t(climate)
climate <- climate[-1,]
# Model environmental covariates vs states
# Z-score the response variables (phe)
the.mean <- apply(PHE, 1, mean, na.rm = TRUE)
the.sigma <- sqrt(apply(PHE, 1, var, na.rm = TRUE))
PHE <- (PHE - the.mean) * (1/the.sigma)
# z-score the covariates
the.mean <- apply(climate, 1, mean, na.rm = TRUE)
the.sigma <- sqrt(apply(climate, 1, var, na.rm = TRUE))
covariates <- (climate - the.mean) * (1/the.sigma)
View(covariates)
# Define model parameters for one state model
ZZ <- matrix(1, 18, 1)
setwd("~/Documents/GitHub/CSIA_lab_work/data")
# Load Packages
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# Load Data
data <- read.csv(file = "final/all_correct_final.csv")
PDO <- read.csv(file = "Environmental/PDO.csv")
# Convert PDO to tidy format
PDO_long <- gather(PDO, Month, Value, -Year)
# Convert PDO to tidy format
PDO_long <- gather(PDO, Month, Value, -Year)
# Sort by year
PDO_long <- arrange(PDO_long, Year)
# Convert month to date
PDO_long <- PDO_long %>%
mutate(month_number = match(Month, month.abb))
# Plot PDO from 1965-2022
PDO_subset <- subset(PDO_long, Year >= 1965 & Year <= 2022)
PDO_annual <- PDO_subset %>%
group_by(Year) %>%
summarise(Value = mean(Value, na.rm = TRUE))
plot(x = PDO_annual$Year,
y = PDO_annual$Value,
type = "l",
xlab = "Year",
ylab = "PDO")
View(PDO_annual)
ggplot(PDO_annual, aes(x = Year, y = Value)) +
geom_ribbon(aes(ymin = pmin(Value, 0), ymax = 0), fill = "red", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(Anomaly, 0)), fill = "blue", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
scale_x_continuous(breaks = seq(min(tp.t$Year), max(tp.t$Year), by = 3)) +
labs(title = "PDO",
x = "Year",
y = "PDO") +
theme_minimal()
ggplot(PDO_annual, aes(x = Year, y = Value)) +
geom_ribbon(aes(ymin = pmin(Value, 0), ymax = 0), fill = "red", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(Anomaly, 0)), fill = "blue", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
scale_x_continuous(breaks = seq(min(PDO_annual$Year), max(PDO_annual$Year), by = 3)) +
labs(title = "PDO",
x = "Year",
y = "PDO") +
theme_minimal()
ggplot(PDO_annual, aes(x = Year, y = Value)) +
geom_ribbon(aes(ymin = pmin(Value, 0), ymax = 0), fill = "red", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(Value, 0)), fill = "blue", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
scale_x_continuous(breaks = seq(min(PDO_annual$Year), max(PDO_annual$Year), by = 3)) +
labs(title = "PDO",
x = "Year",
y = "PDO") +
theme_minimal()
ggplot(PDO_annual, aes(x = Year, y = Value)) +
geom_ribbon(aes(ymin = pmin(Value, 0), ymax = 0), fill = "blue", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(Value, 0)), fill = "red", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
scale_x_continuous(breaks = seq(min(PDO_annual$Year), max(PDO_annual$Year), by = 3)) +
labs(title = "PDO",
x = "Year",
y = "PDO") +
theme_minimal()
ggplot(PDO_annual, aes(x = Year, y = Value)) +
geom_ribbon(aes(ymin = pmin(Value, 0), ymax = 0), fill = "blue", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(Value, 0)), fill = "red", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
scale_x_continuous(breaks = seq(min(PDO_annual$Year), max(PDO_annual$Year), by = 3)) +
labs(title = "PDO",
x = "Year",
y = "PDO Anomaly Through Time") +
theme_minimal()
# Load Packages
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# Load Data
NPGO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/NPGO.csv")
# NPGO average per year
NPGO_annual <- NPGO %>%
group_by(Year) %>%
summarise(avg = mean(NPGO))
# Take only years of interest
NPGO_annual <- NPGO_annual[NPGO_annual$Year >= 1965 & NPGO_annual$Year <= 2022,]
# Plot
plot(NPGO_annual, type = "l")
View(NPGO_annual)
ggplot(NPGO_annual, aes(x = Year, y = avg)) +
geom_ribbon(aes(ymin = pmin(avg, 0), ymax = 0), fill = "blue", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(avg, 0)), fill = "red", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
scale_x_continuous(breaks = seq(min(NPGO_annual$Year), max(NPGO_annual$Year), by = 3)) +
labs(title = "PDO",
x = "Year",
y = "PDO Anomaly Through Time") +
theme_minimal()
ggplot(NPGO_annual, aes(x = Year, y = avg)) +
geom_ribbon(aes(ymin = pmin(avg, 0), ymax = 0), fill = "blue", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(avg, 0)), fill = "red", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
scale_x_continuous(breaks = seq(min(NPGO_annual$Year), max(NPGO_annual$Year), by = 3)) +
labs(title = "NPGO Anomaly Through Time",
x = "Year",
y = "NPGO") +
theme_minimal()
# Load Packages
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# Load Data
PDO <- read.csv(file = "Environmental/PDO.csv")
# Convert PDO to tidy format
PDO_long <- gather(PDO, Month, Value, -Year)
# Sort by year
PDO_long <- arrange(PDO_long, Year)
# Convert month to date
PDO_long <- PDO_long %>%
mutate(month_number = match(Month, month.abb))
# Plot PDO from 1965-2022
PDO_subset <- subset(PDO_long, Year >= 1965 & Year <= 2022)
PDO_annual <- PDO_subset %>%
group_by(Year) %>%
summarise(Value = mean(Value, na.rm = TRUE))
plot(x = PDO_annual$Year,
y = PDO_annual$Value,
type = "l",
xlab = "Year",
ylab = "PDO")
ggplot(PDO_annual, aes(x = Year, y = Value)) +
geom_ribbon(aes(ymin = pmin(Value, 0), ymax = 0), fill = "blue", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(Value, 0)), fill = "red", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
scale_x_continuous(breaks = seq(min(PDO_annual$Year), max(PDO_annual$Year), by = 3)) +
labs(title = "PDO Anomaly Through Time",
x = "Year",
y = "PDO") +
theme_minimal()
# Load Data
NPGO <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/environmental/NPGO.csv")
# NPGO average per year
NPGO_annual <- NPGO %>%
group_by(Year) %>%
summarise(avg = mean(NPGO))
# Take only years of interest
NPGO_annual <- NPGO_annual[NPGO_annual$Year >= 1965 & NPGO_annual$Year <= 2022,]
# Plot
plot(NPGO_annual, type = "l")
# Convert to time series
ts.NPGO <- ts(NPGO_annual[,2],
start = NPGO_annual[1,1],
end = NPGO_annual[72,1],
frequency = 1)
ggplot(NPGO_annual, aes(x = Year, y = avg)) +
geom_ribbon(aes(ymin = pmin(avg, 0), ymax = 0), fill = "blue", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(avg, 0)), fill = "red", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
scale_x_continuous(breaks = seq(min(NPGO_annual$Year), max(NPGO_annual$Year), by = 3)) +
labs(title = "NPGO Anomaly Through Time",
x = "Year",
y = "NPGO") +
theme_minimal()
ggplot(NPGO_annual, aes(x = Year, y = avg)) +
geom_ribbon(aes(ymin = pmin(avg, 0), ymax = 0), fill = "blue", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(avg, 0)), fill = "red", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
scale_x_continuous(breaks = seq(min(NPGO_annual$Year), max(NPGO_annual$Year), by = 3)) +
labs(title = "NPGO Anomaly Through Time",
x = "Year",
y = "NPGO") +
theme_minimal()
# Load data
data.full <- read.csv(file = "~/Documents/GitHub/CSIA_lab_work/data/final/full.csv")
# Subset data for age 2 and only PHE
PHE <- data.full[data.full$Age == "2" &
data.full$AAID == "PHE", c("Year", "System", "Age", "adj", "ID1", "Rep")]
# Subset Wood PHE
PHE.W <- PHE[PHE$System == "Wood", c("Year", "adj", "ID1", "Rep")]
# Subset Kvichak PHE
PHE.K <- PHE[PHE$System == "Kvichak", c("Year", "adj", "ID1", "Rep")]
# Subset Egegik PHE
PHE.E <- PHE[PHE$System == "Egegik", c("Year", "adj", "ID1", "Rep")]
# Subset data for age 2 and only PHE
GLU <- data.full[data.full$Age == "2" &
data.full$AAID == "GLU", c("Year", "System", "Age", "adj", "ID1", "Rep")]
# Subset Wood GLU
GLU.W <- GLU[GLU$System == "Wood", c("Year", "adj", "ID1", "Rep")]
# Subset Kvichak GLU
GLU.K <- GLU[GLU$System == "Kvichak", c("Year", "adj", "ID1", "Rep")]
# Subset Egegik GLU
GLU.E <- GLU[GLU$System == "Egegik", c("Year", "adj", "ID1", "Rep")]
# Function to get all data to wide format
wide <- function(data){
# Full years to represent in data
full_years <- seq(1965, 2022, by = 1)
# Format data: six injections per year, every year represented
long <- data %>%
arrange(Year, ID1, Rep) %>%  # Arrange data by Year, ID, and Rep
group_by(Year) %>%  # Group by Year
mutate(SampleNumber = as.character(row_number())) %>%  # Assign and convert unique sample numbers to characters
select(-ID1, -Rep) %>%  # Remove columns ID and Rep
ungroup() %>%  # Ungroup to avoid issues with expand.grid
right_join(
expand.grid(
Year = full_years,
SampleNumber = c("1", "2", "3", "4", "5", "6")
),
by = c("Year", "SampleNumber")
) %>%
arrange(Year, SampleNumber)
# Convert to wide format
wide <- long %>%
pivot_wider(names_from = SampleNumber, values_from = adj, names_prefix = "Inj")
# Transpose
wide.t <- t(wide)
wide.t <- wide.t[-1,]
# Return data
return(wide.t)
}
# Convert all PHE systems to wide using function
wide.PHE.W <- wide(PHE.W)
wide.PHE.K <- wide(PHE.K)
wide.PHE.E <- wide(PHE.E)
# Convert all GLU systmes to wide using function
wide.GLU.W <- wide(GLU.W)
wide.GLU.K <- wide(GLU.K)
wide.GLU.E <- wide(GLU.E)
# Combine all PHE systems
all.PHE <- rbind(wide.PHE.W, wide.PHE.K, wide.PHE.E)
# Combine all GLU systems
all.GLU <- rbind(wide.GLU.W, wide.GLU.K, wide.GLU.E)
# Adjust the Z matrix to assume one state for all systems
ZZ <- matrix(1, 18, 1)
# Modify the model specifications
mod.list <- list(
B = "identity",
U = "zero",
Q = "diagonal and equal",
Z = ZZ,
A = "scaling",
R = "diagonal and unequal",
x0 = matrix("mu", nrow = 1, ncol = 1),
tinitx = 0
)
# Fit PHE model
PHE.fit.one <- MARSS(all.PHE, model = mod.list)
# Fit GLU model
GLU.fit.one <- MARSS(all.GLU, model = mod.list)
# Subset states
PHE.state <- PHE.fit.one$states
GLU.state <- GLU.fit.one$states
# Plot overall PHE state
years <- seq(1965, 2022, by = 1)
plot(x = PHE$Year, y = PHE$adj, type = "p", pch = 16, col = "black", xlab = "Year", ylab = expression(paste("Phenylalanine ", delta^{15}, "N ")), main = "All Phenylalanine")
lines(x = years, y = PHE.state, type = "l", lwd = 2, col = "blue")
# Plot overall GLU state
plot(x = GLU$Year, y = GLU$adj, type = "p", pch = 16, col = "black", xlab = "Year", ylab = expression(paste("Glutamic Acid ", delta^{15}, "N")), main = "All Glutamic Acid")
lines(x = years, y = GLU.state, type = "l", lwd = 2, col = "red")
# Trophic position calculations
beta <- 3.4 #commonly used constant
TDF <- 7.06 #from Lerner et al 2020
tp <- (((GLU.state - PHE.state)-beta)/TDF) + 1
# Plot TP
plot(x = years, y = tp, type = "l", lwd =2, col = "black", xlab = "Year", ylab = "Trophic Position", main = "Overall Trophic Position")
# Anomaly plot for PHE
PHE.t <- as.data.frame(t(PHE.state))
PHE.t$Year <- years
PHE.t$Mean <- vector(length = length(PHE.t$Year))
PHE.t$Anomaly <- vector(length = length(PHE.t$Year))
for(i in 1:length(PHE.t$Year)){
PHE.t[i, "Mean"] <- mean(PHE.t[,1])
PHE.t[i, "Anomaly"] <- PHE.t$X1[i] - PHE.t$Mean[i]
}
ggplot(PHE.t, aes(x = Year, y = Anomaly)) +
geom_ribbon(aes(ymin = pmin(Anomaly, 0), ymax = 0), fill = "grey20", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(Anomaly, 0)), fill = "grey", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
scale_x_continuous(breaks = seq(min(tp.t$Year), max(tp.t$Year), by = 3)) +
labs(title = "Phenylalanine Anomaly Plot",
x = "Year",
y = "Anomaly (Value - Long Term Mean") +
theme_minimal()
# Anomaly plot for PHE
PHE.t <- as.data.frame(t(PHE.state))
PHE.t$Year <- years
PHE.t$Mean <- vector(length = length(PHE.t$Year))
PHE.t$Anomaly <- vector(length = length(PHE.t$Year))
for(i in 1:length(PHE.t$Year)){
PHE.t[i, "Mean"] <- mean(PHE.t[,1])
PHE.t[i, "Anomaly"] <- PHE.t$X1[i] - PHE.t$Mean[i]
}
ggplot(PHE.t, aes(x = Year, y = Anomaly)) +
geom_ribbon(aes(ymin = pmin(Anomaly, 0), ymax = 0), fill = "grey20", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(Anomaly, 0)), fill = "grey", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
scale_x_continuous(breaks = seq(min(tp.t$Year), max(tp.t$Year), by = 3)) +
labs(title = "Phenylalanine Anomaly Plot",
x = "Year",
y = "Anomaly (Value - Long Term Mean") +
theme_minimal()
# Anomaly plot for GLU
GLU.t <- as.data.frame(t(GLU.state))
GLU.t$Year <- years
GLU.t$Mean <- vector(length = length(GLU.t$Year))
GLU.t$Anomaly <- vector(length = length(GLU.t$Year))
for(i in 1:length(GLU.t$Year)){
GLU.t[i, "Mean"] <- mean(GLU.t[,1])
GLU.t[i, "Anomaly"] <- GLU.t$X1[i] - GLU.t$Mean[i]
}
ggplot(GLU.t, aes(x = Year, y = Anomaly)) +
geom_ribbon(aes(ymin = pmin(Anomaly, 0), ymax = 0), fill = "grey20", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(Anomaly, 0)), fill = "grey", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
scale_x_continuous(breaks = seq(min(tp.t$Year), max(tp.t$Year), by = 3)) +
labs(title = "Glutamic Acid Anomaly Plot",
x = "Year",
y = "Anomaly (Value - Long Term Mean") +
theme_minimal()
# Anomaly plot for TP
tp.t <- as.data.frame(t(tp))
tp.t$Year <- years
tp.t$Mean <- vector(length = length(tp.t$Year))
tp.t$Anomaly <- vector(length = length(tp.t$Year))
for(i in 1:length(tp.t$Year)){
tp.t[i, "Mean"] <- mean(tp.t[,1])
tp.t[i, "Anomaly"] <- tp.t$X1[i] - tp.t$Mean[i]
}
ggplot(tp.t, aes(x = Year, y = Anomaly)) +
geom_ribbon(aes(ymin = pmin(Anomaly, 0), ymax = 0), fill = "grey20", alpha = 0.5) +
geom_ribbon(aes(ymin = 0, ymax = pmax(Anomaly, 0)), fill = "grey", alpha = 0.5) +
geom_line(color = "black") +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
scale_x_continuous(breaks = seq(min(tp.t$Year), max(tp.t$Year), by = 3)) +
labs(title = "Trophic Position Anomaly Plot",
x = "Year",
y = "Anomaly (Value - Long Term Mean)") +
theme_minimal()
